@page "/checkout"
@inject OrderState OrderState
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<div class="top-bar">
    <a href="" class="logo">
        <img src="img/logo.svg" alt="">
    </a>
    <a href="" class="nav-tab">
        <img src="img/pizza-slice.svg" alt="">
    </a>
</div>

<div class="main">
    <div class="checkout-cols">
        <div class="checkout-order-details">
            <h4>
            @foreach (var pizza in Order.Pizzas)
            {
                <p>
                    <strong>
                        @(pizza.Size)"
                        @pizza.Special.Name
                        (£@pizza.GetFormattedTotalPrice())
                    </strong>
                </p>
            }
                <p>
                    <strong>
                        Total price:
                        £@Order.GetFormattedTotalPrice()
                    </strong>
                </p>
            
            </h4>
        </div>
    </div>
    <button class="checkout-button btn btn-warning" @onclick="PlaceOrder">
        Place Order
    </button>
</div>

@code {
    Order Order => OrderState.Order;
    bool isSubmitting;
    async Task PlaceOrder()
    {
        isSubmitting = true;
        //Post JSON to Pizza.db
        var response = await HttpClient.PostAsJsonAsync(NavigationManager.BaseUri + "orders", OrderState.Order);
        var newOrderId = await response.Content.ReadFromJsonAsync<int>();
        //Reset order side bar
        OrderState.ResetOrder();
        //Navigate to the home page after order is placed
        NavigationManager.NavigateTo("/");
    }
}